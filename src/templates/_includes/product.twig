{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * @author    kerosin
 * @copyright Copyright (c) 2021 kerosin
 * @link      https://github.com/kerosin
 * @package   SkroutzXmlFeedPro
 * @since     1.0.0
 */
#}

{% import 'skroutz-xml-feed-pro/_macros/xml' as xml %}

{% set isCommerceInstalled = craft.app.plugins.isPluginInstalled('commerce') %}
{% set variables = craft.skroutzXmlFeedPro %}
{% set instock = stock is defined ? stock : variables.elementInstockFieldValue(element) %}
{% set instock = instock ?: constant('INSTOCK_IN_STOCK', settings) %}

{% if settings.includeOutOfStockElements or variables.isElementInStock(instock) %}
    <product>

        {# uid #}
        {{ xml.element({
            tag: 'uid',
            element: element,
            field: settings.uidField,
            suffix: (color is defined and color is not empty and settings.appendColorToId ? color|kebab|lower),
            suffixSeparator: '-'
        }) }}

        {# name #}
        {{ xml.element({
            tag: 'name',
            element: element,
            field: settings.nameField,
            suffix: (color is defined and color is not empty and settings.appendColorToName ? color)
        }) }}

        {# link #}
        {{ xml.element({
            tag: 'link',
            value: (color is defined and color is not empty and settings.appendColorToUrl
                ? url(element.url, {color: color|kebab|lower})
                : element.url)
        }) }}

        {# image #}
        {{ xml.element({
            tag: 'image',
            element: element,
            field: settings.imageField
        }) }}

        {# additional_image #}
        {{ xml.element({
            tag: 'additional_image',
            element: element,
            field: settings.additionalImageField,
            multiple: true
        }) }}

        {# category #}
        {{ xml.element({
            tag: 'category',
            element: element,
            field: settings.categoryField,
            separator: ' > ',
            raw: true
        }) }}

        {# price #}
        {{ xml.element({
            tag: 'price',
            value: (price is defined ? price : false),
            element: element,
            field: settings.priceField,
            number: true,
            format: true,
            multiplier: settings.taxRate,
            currency: settings.currency
        }) }}

        {# manufacturer #}
        {{ xml.element({
            tag: 'manufacturer',
            element: element,
            field: settings.manufacturerField,
            customValue: settings.manufacturerCustomValue
        }) }}

        {# mpn #}
        {{ xml.element({
            tag: 'mpn',
            value: (mpn is defined ? mpn : false),
            element: element,
            field: settings.mpnField
        }) }}

        {# ean #}
        {{ xml.element({
            tag: 'ean',
            value: (ean is defined ? ean : false),
            element: element,
            field: settings.eanField
        }) }}

        {# size #}
        {{ xml.element({
            tag: 'size',
            value: (sizes is defined ? sizes : false),
            element: element,
            field: settings.sizeField
        }) }}

        {# weight #}
        {% if isCommerceInstalled and variables.isUseWeightUnit(settings.weightUnitField) %}
            {% set weightUnit = craft.commerce.settings.weightUnits %}
        {% else %}
            {% set weightUnit = variables.elementFieldValue(
                element,
                settings.weightUnitField,
                settings.weightUnitCustomValue
            ) %}
        {% endif %}

        {{ xml.element({
            tag: 'weight',
            value: (weight is defined ? weight : false),
            element: element,
            field: settings.weightField,
            suffix: weightUnit,
            number: true
        }) }}

        {# instock #}
        {{ xml.element({
            tag: 'instock',
            value: instock|default(constant('INSTOCK_IN_STOCK', settings))
        }) }}

        {# availability #}
        {% if variables.isUseInstock(settings.availabilityField) %}
            {{ xml.element({
                tag: 'availability',
                value: (variables.isElementInStock(instock)
                    ? settings.availabilityInStockValue
                    : settings.availabilityOutOfStockValue)
            }) }}
        {% else %}
            {{ xml.element({
                tag: 'availability',
                value: (availability is defined ? availability : false),
                element: element,
                field: settings.availabilityField,
                customValue: settings.availabilityCustomValue
            }) }}
        {% endif %}

        {# shipping #}
        {{ xml.element({
            tag: 'shipping',
            element: element,
            field: settings.shippingField,
            customValue: settings.shippingCustomValue,
            number: true,
            format: true,
            currency: settings.currency
        }) }}

        {# color #}
        {{ xml.element({
            tag: 'color',
            value: (color is defined ? color : false),
            element: element,
            field: settings.colorField
        }) }}

        {# description #}
        {{ xml.element({
            tag: 'description',
            element: element,
            field: settings.descriptionField
        }) }}

    </product>
{% endif %}
